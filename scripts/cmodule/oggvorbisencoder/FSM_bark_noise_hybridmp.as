package cmodule.oggvorbisencoder
{
   import avm2.intrinsics.memory.lf32;
   import avm2.intrinsics.memory.li32;
   import avm2.intrinsics.memory.sf32;
   import avm2.intrinsics.memory.si32;
   
   public final class FSM_bark_noise_hybridmp extends Machine
   {
       
      
      public function FSM_bark_noise_hybridmp()
      {
         super();
      }
      
      public static function start() : void
      {
         var _loc1_:int = 0;
         var _loc2_:* = 0;
         var _loc3_:* = 0;
         var _loc4_:int = 0;
         var _loc5_:int = 0;
         var _loc6_:int = 0;
         var _loc7_:* = 0;
         var _loc8_:* = 0;
         var _loc9_:int = 0;
         var _loc10_:* = 0;
         var _loc11_:* = 0;
         var _loc12_:* = 0;
         var _loc13_:int = 0;
         var _loc14_:int = 0;
         var _loc15_:int = 0;
         var _loc16_:int = 0;
         var _loc17_:int = 0;
         var _loc18_:* = 0;
         var _loc19_:* = 0;
         var _loc20_:int = 0;
         var _loc21_:int = 0;
         var _loc22_:int = 0;
         var _loc23_:int = 0;
         var _loc24_:int = 0;
         var _loc25_:int = 0;
         var _loc26_:int = 0;
         var _loc27_:int = 0;
         var _loc28_:Number = NaN;
         var _loc29_:Number = NaN;
         var _loc30_:Number = NaN;
         var _loc31_:Number = NaN;
         var _loc32_:Number = NaN;
         var _loc33_:Number = NaN;
         var _loc34_:Number = NaN;
         var _loc35_:Number = NaN;
         var _loc36_:Number = NaN;
         var _loc37_:Number = NaN;
         var _loc38_:Number = NaN;
         var _loc39_:Number = NaN;
         FSM_bark_noise_hybridmp.esp = FSM_bark_noise_hybridmp.esp - 4;
         si32(FSM_bark_noise_hybridmp.ebp,FSM_bark_noise_hybridmp.esp);
         FSM_bark_noise_hybridmp.ebp = FSM_bark_noise_hybridmp.esp;
         FSM_bark_noise_hybridmp.esp = FSM_bark_noise_hybridmp.esp - 0;
         _loc28_ = 1;
         _loc1_ = li32(FSM_bark_noise_hybridmp.ebp + 8);
         _loc2_ = int(FSM_bark_noise_hybridmp.esp);
         _loc3_ = _loc1_ << 2;
         _loc2_ = int(_loc2_ - _loc3_);
         FSM_bark_noise_hybridmp.esp = _loc2_;
         _loc4_ = FSM_bark_noise_hybridmp.esp;
         _loc4_ = _loc4_ - _loc3_;
         FSM_bark_noise_hybridmp.esp = _loc4_;
         _loc5_ = FSM_bark_noise_hybridmp.esp;
         _loc5_ = _loc5_ - _loc3_;
         FSM_bark_noise_hybridmp.esp = _loc5_;
         _loc6_ = FSM_bark_noise_hybridmp.esp;
         _loc6_ = _loc6_ - _loc3_;
         FSM_bark_noise_hybridmp.esp = _loc6_;
         _loc7_ = int(FSM_bark_noise_hybridmp.esp);
         _loc3_ = int(_loc7_ - _loc3_);
         _loc29_ = lf32(FSM_bark_noise_hybridmp.ebp + 24);
         _loc7_ = int(li32(FSM_bark_noise_hybridmp.ebp + 16));
         FSM_bark_noise_hybridmp.esp = _loc3_;
         _loc30_ = lf32(_loc7_);
         _loc31_ = _loc29_;
         _loc30_ = _loc30_ + _loc31_;
         _loc30_ = _loc30_;
         _loc28_ = _loc28_;
         _loc31_ = _loc28_;
         _loc30_ = _loc30_;
         _loc30_ = _loc30_ < _loc31_?Number(_loc31_):Number(_loc30_);
         _loc30_ = _loc30_;
         _loc30_ = _loc30_;
         _loc31_ = _loc30_ * _loc30_;
         _loc32_ = 0.5;
         _loc31_ = _loc31_;
         _loc32_ = _loc32_;
         _loc32_ = _loc32_;
         _loc31_ = _loc31_;
         _loc31_ = _loc31_ * _loc32_;
         _loc32_ = 0;
         _loc31_ = _loc31_;
         _loc32_ = _loc32_;
         _loc31_ = _loc31_;
         _loc33_ = _loc32_;
         _loc34_ = _loc31_ + _loc33_;
         _loc30_ = _loc31_ * _loc30_;
         _loc31_ = _loc34_;
         _loc30_ = _loc30_;
         sf32(_loc31_,_loc2_);
         _loc30_ = _loc30_;
         _loc30_ = _loc30_ + _loc33_;
         sf32(_loc31_,_loc4_);
         _loc8_ = 0;
         si32(_loc8_,_loc5_);
         _loc30_ = _loc30_;
         sf32(_loc30_,_loc6_);
         si32(_loc8_,_loc3_);
         _loc8_ = int(li32(FSM_bark_noise_hybridmp.ebp + 12));
         _loc9_ = li32(FSM_bark_noise_hybridmp.ebp + 20);
         _loc10_ = 1;
         _loc11_ = 4;
         _loc12_ = int(li32(FSM_bark_noise_hybridmp.ebp + 28));
         _loc13_ = _loc3_;
         _loc14_ = _loc6_;
         _loc15_ = _loc5_;
         _loc16_ = _loc4_;
         _loc17_ = _loc2_;
         _loc33_ = _loc32_;
         _loc34_ = _loc31_;
         while(true)
         {
            _loc35_ = _loc30_;
            _loc30_ = _loc34_;
            _loc34_ = _loc31_;
            _loc31_ = _loc32_;
            if(_loc10_ >= _loc1_)
            {
               break;
            }
            _loc32_ = 1;
            _loc18_ = int(_loc7_ + _loc11_);
            _loc36_ = lf32(_loc18_);
            _loc37_ = _loc29_;
            _loc36_ = _loc36_ + _loc37_;
            _loc36_ = _loc36_;
            _loc32_ = _loc32_;
            _loc36_ = _loc36_;
            _loc32_ = _loc32_;
            _loc36_ = _loc36_ < _loc32_?Number(_loc32_):Number(_loc36_);
            _loc36_ = _loc36_;
            _loc36_ = _loc36_;
            _loc37_ = _loc36_ * _loc36_;
            _loc37_ = _loc37_;
            _loc37_ = _loc37_;
            _loc28_ = _loc28_;
            _loc38_ = _loc37_ * _loc28_;
            _loc38_ = _loc38_;
            _loc38_ = _loc38_;
            _loc34_ = _loc34_;
            _loc39_ = _loc38_ * _loc28_;
            _loc34_ = _loc34_ + _loc37_;
            _loc30_ = _loc30_;
            _loc39_ = _loc39_;
            _loc37_ = _loc37_ * _loc36_;
            _loc30_ = _loc38_ + _loc30_;
            _loc36_ = _loc38_ * _loc36_;
            _loc37_ = _loc37_;
            _loc38_ = _loc34_;
            _loc18_ = int(_loc2_ + _loc11_);
            _loc33_ = _loc33_;
            _loc34_ = _loc39_;
            _loc33_ = _loc34_ + _loc33_;
            _loc34_ = _loc36_;
            sf32(_loc38_,_loc18_);
            _loc36_ = _loc30_;
            _loc18_ = int(_loc4_ + _loc11_);
            _loc30_ = _loc35_;
            _loc35_ = _loc37_;
            _loc30_ = _loc35_ + _loc30_;
            sf32(_loc36_,_loc18_);
            _loc33_ = _loc33_;
            _loc18_ = int(_loc5_ + _loc11_);
            _loc31_ = _loc31_;
            _loc34_ = _loc34_;
            _loc31_ = _loc34_ + _loc31_;
            sf32(_loc33_,_loc18_);
            _loc30_ = _loc30_;
            _loc18_ = int(_loc6_ + _loc11_);
            _loc28_ = _loc28_ + _loc32_;
            sf32(_loc30_,_loc18_);
            _loc32_ = _loc31_;
            _loc18_ = int(_loc3_ + _loc11_);
            sf32(_loc32_,_loc18_);
            _loc28_ = _loc28_;
            _loc11_ = int(_loc11_ + 4);
            _loc10_ = int(_loc10_ + 1);
            _loc34_ = _loc36_;
            _loc31_ = _loc38_;
         }
         _loc28_ = 0;
         _loc30_ = 1;
         _loc28_ = _loc28_;
         _loc30_ = _loc30_;
         _loc7_ = 0;
         _loc10_ = int(_loc7_);
         _loc31_ = _loc28_;
         _loc32_ = _loc28_;
         while(true)
         {
            _loc11_ = int(_loc8_ + _loc10_);
            _loc11_ = int(li32(_loc11_));
            _loc18_ = _loc11_ >> 16;
            if(_loc18_ <= -1)
            {
               _loc30_ = 0;
               _loc18_ = int(0 - _loc18_);
               _loc11_ = _loc11_ & 65535;
               _loc18_ = _loc18_ << 2;
               _loc11_ = _loc11_ << 2;
               _loc19_ = int(_loc13_ + _loc18_);
               _loc20_ = _loc13_ + _loc11_;
               _loc21_ = _loc14_ + _loc18_;
               _loc22_ = _loc14_ + _loc11_;
               _loc23_ = _loc16_ + _loc18_;
               _loc24_ = _loc16_ + _loc11_;
               _loc25_ = _loc17_ + _loc18_;
               _loc26_ = _loc17_ + _loc11_;
               _loc31_ = lf32(_loc26_);
               _loc32_ = lf32(_loc25_);
               _loc33_ = lf32(_loc24_);
               _loc34_ = lf32(_loc23_);
               _loc35_ = lf32(_loc22_);
               _loc36_ = lf32(_loc21_);
               _loc37_ = lf32(_loc20_);
               _loc38_ = lf32(_loc19_);
               _loc31_ = _loc31_ + _loc32_;
               _loc32_ = _loc33_ - _loc34_;
               _loc33_ = _loc35_ + _loc36_;
               _loc34_ = _loc37_ - _loc38_;
               _loc31_ = _loc31_;
               _loc32_ = _loc32_;
               _loc33_ = _loc33_;
               _loc34_ = _loc34_;
               _loc18_ = int(_loc15_ + _loc18_);
               _loc11_ = int(_loc15_ + _loc11_);
               _loc32_ = _loc32_;
               _loc34_ = _loc34_;
               _loc31_ = _loc31_;
               _loc33_ = _loc33_;
               _loc35_ = lf32(_loc11_);
               _loc36_ = lf32(_loc18_);
               _loc37_ = _loc31_ * _loc34_;
               _loc38_ = _loc32_ * _loc33_;
               _loc35_ = _loc35_ + _loc36_;
               _loc36_ = _loc37_;
               _loc37_ = _loc38_;
               _loc35_ = _loc35_;
               _loc35_ = _loc35_;
               _loc37_ = _loc37_;
               _loc36_ = _loc36_;
               _loc36_ = _loc36_ - _loc37_;
               _loc34_ = _loc32_ * _loc34_;
               _loc33_ = _loc33_ * _loc35_;
               _loc36_ = _loc36_;
               _loc34_ = _loc34_;
               _loc33_ = _loc33_;
               _loc37_ = _loc36_;
               _loc28_ = _loc28_;
               _loc34_ = _loc34_;
               _loc33_ = _loc33_;
               _loc37_ = _loc28_ * _loc37_;
               _loc31_ = _loc31_ * _loc35_;
               _loc33_ = _loc33_ - _loc34_;
               _loc32_ = _loc32_ * _loc32_;
               _loc34_ = _loc37_;
               _loc31_ = _loc31_;
               _loc33_ = _loc33_;
               _loc32_ = _loc32_;
               _loc35_ = _loc33_;
               _loc34_ = _loc34_;
               _loc32_ = _loc32_;
               _loc31_ = _loc31_;
               _loc34_ = _loc34_ + _loc35_;
               _loc31_ = _loc31_ - _loc32_;
               _loc32_ = _loc34_;
               _loc34_ = _loc31_;
               _loc31_ = _loc34_;
               _loc32_ = _loc32_;
               _loc31_ = _loc32_ / _loc31_;
               _loc31_ = _loc31_;
               _loc30_ = _loc30_;
               _loc30_ = _loc30_;
               _loc31_ = _loc31_;
               _loc30_ = _loc31_ < _loc30_?Number(_loc30_):Number(_loc31_);
               _loc30_ = _loc30_;
               _loc31_ = 1;
               _loc31_ = _loc31_;
               _loc32_ = _loc29_;
               _loc30_ = _loc30_;
               _loc30_ = _loc30_ - _loc32_;
               _loc31_ = _loc31_;
               _loc28_ = _loc28_ + _loc31_;
               _loc30_ = _loc30_;
               _loc11_ = int(_loc9_ + _loc10_);
               sf32(_loc30_,_loc11_);
               _loc28_ = _loc28_;
               _loc10_ = int(_loc10_ + 4);
               _loc7_ = int(_loc7_ + 1);
               _loc31_ = _loc33_;
               _loc32_ = _loc36_;
               _loc30_ = _loc34_;
               continue;
            }
            break;
         }
         _loc10_ = 0;
         _loc11_ = _loc7_ << 2;
         while(true)
         {
            _loc18_ = int(_loc8_ + _loc11_);
            _loc18_ = int(li32(_loc18_));
            _loc19_ = _loc18_ & 65535;
            _loc18_ = _loc18_ >> 16;
            if(_loc19_ < _loc1_)
            {
               _loc30_ = 0;
               _loc18_ = _loc18_ << 2;
               _loc19_ = _loc19_ << 2;
               _loc20_ = _loc13_ + _loc18_;
               _loc21_ = _loc13_ + _loc19_;
               _loc22_ = _loc14_ + _loc18_;
               _loc23_ = _loc14_ + _loc19_;
               _loc24_ = _loc16_ + _loc18_;
               _loc25_ = _loc16_ + _loc19_;
               _loc26_ = _loc17_ + _loc18_;
               _loc27_ = _loc17_ + _loc19_;
               _loc31_ = lf32(_loc27_);
               _loc32_ = lf32(_loc26_);
               _loc33_ = lf32(_loc25_);
               _loc34_ = lf32(_loc24_);
               _loc35_ = lf32(_loc23_);
               _loc36_ = lf32(_loc22_);
               _loc37_ = lf32(_loc21_);
               _loc38_ = lf32(_loc20_);
               _loc31_ = _loc31_ - _loc32_;
               _loc32_ = _loc33_ - _loc34_;
               _loc33_ = _loc35_ - _loc36_;
               _loc34_ = _loc37_ - _loc38_;
               _loc31_ = _loc31_;
               _loc32_ = _loc32_;
               _loc33_ = _loc33_;
               _loc34_ = _loc34_;
               _loc18_ = int(_loc15_ + _loc18_);
               _loc19_ = int(_loc15_ + _loc19_);
               _loc32_ = _loc32_;
               _loc34_ = _loc34_;
               _loc31_ = _loc31_;
               _loc33_ = _loc33_;
               _loc35_ = lf32(_loc19_);
               _loc36_ = lf32(_loc18_);
               _loc37_ = _loc31_ * _loc34_;
               _loc38_ = _loc32_ * _loc33_;
               _loc35_ = _loc35_ - _loc36_;
               _loc36_ = _loc37_;
               _loc37_ = _loc38_;
               _loc35_ = _loc35_;
               _loc35_ = _loc35_;
               _loc37_ = _loc37_;
               _loc36_ = _loc36_;
               _loc36_ = _loc36_ - _loc37_;
               _loc34_ = _loc32_ * _loc34_;
               _loc33_ = _loc33_ * _loc35_;
               _loc36_ = _loc36_;
               _loc34_ = _loc34_;
               _loc33_ = _loc33_;
               _loc37_ = _loc36_;
               _loc28_ = _loc28_;
               _loc34_ = _loc34_;
               _loc33_ = _loc33_;
               _loc37_ = _loc28_ * _loc37_;
               _loc31_ = _loc31_ * _loc35_;
               _loc33_ = _loc33_ - _loc34_;
               _loc32_ = _loc32_ * _loc32_;
               _loc34_ = _loc37_;
               _loc31_ = _loc31_;
               _loc33_ = _loc33_;
               _loc32_ = _loc32_;
               _loc35_ = _loc33_;
               _loc34_ = _loc34_;
               _loc32_ = _loc32_;
               _loc31_ = _loc31_;
               _loc34_ = _loc34_ + _loc35_;
               _loc31_ = _loc31_ - _loc32_;
               _loc32_ = _loc34_;
               _loc34_ = _loc31_;
               _loc31_ = _loc34_;
               _loc32_ = _loc32_;
               _loc31_ = _loc32_ / _loc31_;
               _loc31_ = _loc31_;
               _loc30_ = _loc30_;
               _loc30_ = _loc30_;
               _loc31_ = _loc31_;
               _loc30_ = _loc31_ < _loc30_?Number(_loc30_):Number(_loc31_);
               _loc30_ = _loc30_;
               _loc31_ = 1;
               _loc31_ = _loc31_;
               _loc32_ = _loc29_;
               _loc30_ = _loc30_;
               _loc30_ = _loc30_ - _loc32_;
               _loc31_ = _loc31_;
               _loc28_ = _loc28_ + _loc31_;
               _loc30_ = _loc30_;
               _loc18_ = int(_loc9_ + _loc11_);
               sf32(_loc30_,_loc18_);
               _loc28_ = _loc28_;
               _loc11_ = int(_loc11_ + 4);
               _loc10_ = int(_loc10_ + 1);
               _loc31_ = _loc33_;
               _loc32_ = _loc36_;
               _loc30_ = _loc34_;
               continue;
            }
            break;
         }
         _loc8_ = _loc7_ << 2;
         _loc11_ = _loc10_ << 2;
         _loc8_ = int(_loc8_ + _loc9_);
         _loc8_ = int(_loc11_ + _loc8_);
         _loc10_ = int(_loc10_ + _loc7_);
         _loc7_ = int(_loc8_);
         while(true)
         {
            _loc8_ = int(_loc7_);
            _loc7_ = int(_loc8_);
            if(_loc10_ >= _loc1_)
            {
               break;
            }
            _loc33_ = 0;
            _loc34_ = _loc32_;
            _loc28_ = _loc28_;
            _loc34_ = _loc28_ * _loc34_;
            _loc34_ = _loc34_;
            _loc35_ = _loc31_;
            _loc34_ = _loc34_;
            _loc34_ = _loc34_ + _loc35_;
            _loc34_ = _loc34_;
            _loc35_ = _loc30_;
            _loc34_ = _loc34_;
            _loc34_ = _loc34_ / _loc35_;
            _loc34_ = _loc34_;
            _loc33_ = _loc33_;
            _loc33_ = _loc33_;
            _loc34_ = _loc34_;
            _loc33_ = _loc34_ < _loc33_?Number(_loc33_):Number(_loc34_);
            _loc33_ = _loc33_;
            _loc34_ = 1;
            _loc34_ = _loc34_;
            _loc35_ = _loc29_;
            _loc33_ = _loc33_;
            _loc33_ = _loc33_ - _loc35_;
            _loc34_ = _loc34_;
            _loc28_ = _loc28_ + _loc34_;
            _loc33_ = _loc33_;
            sf32(_loc33_,_loc7_);
            _loc28_ = _loc28_;
            _loc7_ = int(_loc8_ + 4);
            _loc10_ = int(_loc10_ + 1);
         }
         if(_loc12_ >= 1)
         {
            _loc28_ = 0;
            _loc7_ = int(_loc12_ >>> 31);
            _loc7_ = int(_loc12_ + _loc7_);
            _loc7_ = _loc7_ >> 1;
            _loc8_ = int(_loc7_ - _loc12_);
            _loc10_ = _loc8_ << 2;
            _loc7_ = _loc7_ << 2;
            _loc28_ = _loc28_;
            _loc10_ = int(0 - _loc10_);
            _loc11_ = int(_loc3_ + _loc7_);
            _loc13_ = _loc6_ + _loc7_;
            _loc14_ = _loc5_ + _loc7_;
            _loc15_ = _loc4_ + _loc7_;
            _loc7_ = int(_loc2_ + _loc7_);
            _loc16_ = 0;
            _loc17_ = _loc16_;
            while(true)
            {
               _loc18_ = int(_loc8_ + _loc16_);
               if(_loc18_ <= -1)
               {
                  _loc18_ = int(_loc3_ + _loc10_);
                  _loc19_ = int(_loc11_ + _loc17_);
                  _loc20_ = _loc6_ + _loc10_;
                  _loc21_ = _loc13_ + _loc17_;
                  _loc22_ = _loc4_ + _loc10_;
                  _loc23_ = _loc15_ + _loc17_;
                  _loc24_ = _loc2_ + _loc10_;
                  _loc25_ = _loc7_ + _loc17_;
                  _loc30_ = lf32(_loc25_);
                  _loc31_ = lf32(_loc24_);
                  _loc32_ = lf32(_loc23_);
                  _loc33_ = lf32(_loc22_);
                  _loc34_ = lf32(_loc21_);
                  _loc35_ = lf32(_loc20_);
                  _loc36_ = lf32(_loc19_);
                  _loc37_ = lf32(_loc18_);
                  _loc30_ = _loc30_ + _loc31_;
                  _loc31_ = _loc32_ - _loc33_;
                  _loc32_ = _loc34_ + _loc35_;
                  _loc33_ = _loc36_ - _loc37_;
                  _loc30_ = _loc30_;
                  _loc31_ = _loc31_;
                  _loc32_ = _loc32_;
                  _loc33_ = _loc33_;
                  _loc18_ = int(_loc5_ + _loc10_);
                  _loc19_ = int(_loc14_ + _loc17_);
                  _loc31_ = _loc31_;
                  _loc33_ = _loc33_;
                  _loc30_ = _loc30_;
                  _loc32_ = _loc32_;
                  _loc34_ = lf32(_loc19_);
                  _loc35_ = lf32(_loc18_);
                  _loc36_ = _loc30_ * _loc33_;
                  _loc37_ = _loc31_ * _loc32_;
                  _loc34_ = _loc34_ + _loc35_;
                  _loc35_ = _loc36_;
                  _loc36_ = _loc37_;
                  _loc34_ = _loc34_;
                  _loc34_ = _loc34_;
                  _loc36_ = _loc36_;
                  _loc35_ = _loc35_;
                  _loc35_ = _loc35_ - _loc36_;
                  _loc33_ = _loc31_ * _loc33_;
                  _loc32_ = _loc32_ * _loc34_;
                  _loc35_ = _loc35_;
                  _loc33_ = _loc33_;
                  _loc32_ = _loc32_;
                  _loc36_ = _loc35_;
                  _loc37_ = _loc28_;
                  _loc33_ = _loc33_;
                  _loc32_ = _loc32_;
                  _loc36_ = _loc37_ * _loc36_;
                  _loc30_ = _loc30_ * _loc34_;
                  _loc32_ = _loc32_ - _loc33_;
                  _loc31_ = _loc31_ * _loc31_;
                  _loc33_ = _loc36_;
                  _loc30_ = _loc30_;
                  _loc32_ = _loc32_;
                  _loc31_ = _loc31_;
                  _loc34_ = _loc32_;
                  _loc33_ = _loc33_;
                  _loc31_ = _loc31_;
                  _loc30_ = _loc30_;
                  _loc33_ = _loc33_ + _loc34_;
                  _loc30_ = _loc30_ - _loc31_;
                  _loc31_ = _loc33_;
                  _loc30_ = _loc30_;
                  _loc33_ = _loc30_;
                  _loc31_ = _loc31_;
                  _loc31_ = _loc31_ / _loc33_;
                  _loc31_ = _loc31_;
                  _loc33_ = _loc29_;
                  _loc31_ = _loc31_;
                  _loc18_ = int(_loc9_ + _loc17_);
                  _loc34_ = lf32(_loc18_);
                  _loc31_ = _loc31_ - _loc33_;
                  _loc31_ = _loc31_;
                  _loc33_ = _loc31_;
                  if(_loc33_ < _loc34_)
                  {
                     sf32(_loc31_,_loc18_);
                  }
                  _loc31_ = 1;
                  _loc31_ = _loc31_;
                  _loc31_ = _loc31_;
                  _loc28_ = _loc28_;
                  _loc28_ = _loc28_ + _loc31_;
                  _loc28_ = _loc28_;
                  _loc10_ = int(_loc10_ + -4);
                  _loc17_ = _loc17_ + 4;
                  _loc16_ = _loc16_ + 1;
                  _loc31_ = _loc32_;
                  _loc32_ = _loc35_;
                  continue;
               }
               break;
            }
            _loc7_ = 0;
            _loc8_ = int(_loc12_ >>> 31);
            _loc8_ = int(_loc12_ + _loc8_);
            _loc8_ = _loc8_ >> 1;
            _loc10_ = int(_loc8_ - _loc12_);
            _loc10_ = _loc10_ << 2;
            _loc11_ = _loc8_ << 2;
            _loc12_ = _loc16_ << 2;
            _loc13_ = _loc3_ + _loc11_;
            _loc14_ = _loc6_ + _loc11_;
            _loc15_ = _loc5_ + _loc11_;
            _loc17_ = _loc4_ + _loc11_;
            _loc11_ = int(_loc2_ + _loc11_);
            _loc3_ = int(_loc3_ + _loc10_);
            _loc6_ = _loc6_ + _loc10_;
            _loc5_ = _loc5_ + _loc10_;
            _loc4_ = _loc4_ + _loc10_;
            _loc2_ = int(_loc2_ + _loc10_);
            _loc8_ = int(_loc16_ + _loc8_);
            _loc10_ = int(_loc12_);
            while(true)
            {
               _loc12_ = int(_loc8_ + _loc7_);
               if(_loc12_ < _loc1_)
               {
                  _loc12_ = int(_loc3_ + _loc10_);
                  _loc18_ = int(_loc13_ + _loc10_);
                  _loc19_ = int(_loc6_ + _loc10_);
                  _loc20_ = _loc14_ + _loc10_;
                  _loc21_ = _loc4_ + _loc10_;
                  _loc22_ = _loc17_ + _loc10_;
                  _loc23_ = _loc2_ + _loc10_;
                  _loc24_ = _loc11_ + _loc10_;
                  _loc30_ = lf32(_loc24_);
                  _loc31_ = lf32(_loc23_);
                  _loc32_ = lf32(_loc22_);
                  _loc33_ = lf32(_loc21_);
                  _loc34_ = lf32(_loc20_);
                  _loc35_ = lf32(_loc19_);
                  _loc36_ = lf32(_loc18_);
                  _loc37_ = lf32(_loc12_);
                  _loc30_ = _loc30_ - _loc31_;
                  _loc31_ = _loc32_ - _loc33_;
                  _loc32_ = _loc34_ - _loc35_;
                  _loc33_ = _loc36_ - _loc37_;
                  _loc30_ = _loc30_;
                  _loc31_ = _loc31_;
                  _loc32_ = _loc32_;
                  _loc33_ = _loc33_;
                  _loc12_ = int(_loc5_ + _loc10_);
                  _loc18_ = int(_loc15_ + _loc10_);
                  _loc31_ = _loc31_;
                  _loc33_ = _loc33_;
                  _loc30_ = _loc30_;
                  _loc32_ = _loc32_;
                  _loc34_ = lf32(_loc18_);
                  _loc35_ = lf32(_loc12_);
                  _loc36_ = _loc30_ * _loc33_;
                  _loc37_ = _loc31_ * _loc32_;
                  _loc34_ = _loc34_ - _loc35_;
                  _loc35_ = _loc36_;
                  _loc36_ = _loc37_;
                  _loc34_ = _loc34_;
                  _loc34_ = _loc34_;
                  _loc36_ = _loc36_;
                  _loc35_ = _loc35_;
                  _loc35_ = _loc35_ - _loc36_;
                  _loc33_ = _loc31_ * _loc33_;
                  _loc32_ = _loc32_ * _loc34_;
                  _loc35_ = _loc35_;
                  _loc33_ = _loc33_;
                  _loc32_ = _loc32_;
                  _loc36_ = _loc35_;
                  _loc37_ = _loc28_;
                  _loc33_ = _loc33_;
                  _loc32_ = _loc32_;
                  _loc36_ = _loc37_ * _loc36_;
                  _loc30_ = _loc30_ * _loc34_;
                  _loc32_ = _loc32_ - _loc33_;
                  _loc31_ = _loc31_ * _loc31_;
                  _loc33_ = _loc36_;
                  _loc30_ = _loc30_;
                  _loc32_ = _loc32_;
                  _loc31_ = _loc31_;
                  _loc34_ = _loc32_;
                  _loc33_ = _loc33_;
                  _loc31_ = _loc31_;
                  _loc30_ = _loc30_;
                  _loc33_ = _loc33_ + _loc34_;
                  _loc30_ = _loc30_ - _loc31_;
                  _loc31_ = _loc33_;
                  _loc30_ = _loc30_;
                  _loc33_ = _loc30_;
                  _loc31_ = _loc31_;
                  _loc31_ = _loc31_ / _loc33_;
                  _loc31_ = _loc31_;
                  _loc33_ = _loc29_;
                  _loc31_ = _loc31_;
                  _loc12_ = int(_loc9_ + _loc10_);
                  _loc34_ = lf32(_loc12_);
                  _loc31_ = _loc31_ - _loc33_;
                  _loc31_ = _loc31_;
                  _loc33_ = _loc31_;
                  if(_loc33_ < _loc34_)
                  {
                     sf32(_loc31_,_loc12_);
                  }
                  _loc31_ = 1;
                  _loc31_ = _loc31_;
                  _loc31_ = _loc31_;
                  _loc28_ = _loc28_;
                  _loc28_ = _loc28_ + _loc31_;
                  _loc28_ = _loc28_;
                  _loc10_ = int(_loc10_ + 4);
                  _loc7_ = int(_loc7_ + 1);
                  _loc31_ = _loc32_;
                  _loc32_ = _loc35_;
                  continue;
               }
               break;
            }
            _loc2_ = _loc16_ << 2;
            _loc3_ = _loc7_ << 2;
            _loc9_ = _loc2_ + _loc9_;
            _loc9_ = _loc3_ + _loc9_;
            _loc7_ = int(_loc7_ + _loc16_);
            while(true)
            {
               _loc16_ = _loc9_;
               if(_loc7_ >= _loc1_)
               {
                  break;
               }
               _loc33_ = _loc32_;
               _loc34_ = _loc28_;
               _loc33_ = _loc34_ * _loc33_;
               _loc33_ = _loc33_;
               _loc34_ = _loc31_;
               _loc33_ = _loc33_;
               _loc33_ = _loc33_ + _loc34_;
               _loc33_ = _loc33_;
               _loc34_ = _loc30_;
               _loc33_ = _loc33_;
               _loc33_ = _loc33_ / _loc34_;
               _loc33_ = _loc33_;
               _loc34_ = _loc29_;
               _loc33_ = _loc33_;
               _loc33_ = _loc33_ - _loc34_;
               _loc33_ = _loc33_;
               _loc34_ = lf32(_loc16_);
               _loc35_ = _loc33_;
               if(_loc35_ < _loc34_)
               {
                  sf32(_loc33_,_loc16_);
               }
               _loc33_ = 1;
               _loc33_ = _loc33_;
               _loc33_ = _loc33_;
               _loc28_ = _loc28_;
               _loc28_ = _loc28_ + _loc33_;
               _loc28_ = _loc28_;
               _loc9_ = _loc9_ + 4;
               _loc7_ = int(_loc7_ + 1);
            }
         }
         FSM_bark_noise_hybridmp.esp = FSM_bark_noise_hybridmp.ebp;
         FSM_bark_noise_hybridmp.ebp = li32(FSM_bark_noise_hybridmp.esp);
         FSM_bark_noise_hybridmp.esp = FSM_bark_noise_hybridmp.esp + 4;
         FSM_bark_noise_hybridmp.esp = FSM_bark_noise_hybridmp.esp + 4;
      }
   }
}
